{
    "id": "0c773075-92c8-44e5-a0d3-4328a966dac4",
    "title": "\u041e\u0442\u0437\u044b\u0432 \u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0435",
    "signature": "tests/test_review/prod/test_review_all.py::Test101Review::test_review_provider",
    "run_id": null,
    "testops_id": 345,
    "execution": {
        "start_time": 1732002042.8040137,
        "status": "invalid",
        "end_time": 1732002062.3900287,
        "duration": 19586,
        "stacktrace": "title = '\u0421\u043a\u0440\u043e\u043b\u043b \u0434\u043e \u043a\u043d\u043e\u043f\u043a\u0438 \u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430 \u0432 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u0438 \u043a\u043b\u0438\u043a \u043d\u0430 \u043d\u0435\u0435'\nexpected = None\n\n    @staticmethod\n    @contextdecorator\n    def step(title, expected=None):\n        \"\"\"\n        Step context/decorator\n    \n        Usage:\n    \n        >>> @qase.step(\"First step\")\n        ... def first_step():\n        ...     print(\"smthng\")\n    \n        >>> with qase.step(\"Second step\"):\n        ...     print(\"smthng\")\n        \"\"\"\n        plugin = None\n        id = str(uuid.uuid4())\n        try:\n            plugin = QasePytestPluginSingleton.get_instance()\n            step = Step(\n                step_type = 'text',\n                id = id,\n                data = StepTextData(\n                    action = title,\n                    expected_result = expected if (expected) else None,\n                )\n            )\n            plugin.start_step(step)\n>           yield\n\n..\\..\\..\\..\\autotests\\venv\\Lib\\site-packages\\qaseio\\pytest\\__init__.py:286: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py:81: in inner\n    return func(*args, **kwds)\n..\\..\\..\\pages\\review\\internet_page.py:98: in scroll_to_feedback_provider\n    actions.move_to_element(scroll).perform()\n..\\..\\..\\..\\autotests\\venv\\Lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py:253: in move_to_element\n    self.w3c_actions.pointer_action.move_to(to_element)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.actions.pointer_actions.PointerActions object at 0x00000244D3979A50>\nelement = False, x = 0, y = 0, width = None, height = None, pressure = None\ntangential_pressure = None, tilt_x = None, tilt_y = None, twist = None\naltitude_angle = None, azimuth_angle = None\n\n    def move_to(\n        self,\n        element,\n        x=0,\n        y=0,\n        width=None,\n        height=None,\n        pressure=None,\n        tangential_pressure=None,\n        tilt_x=None,\n        tilt_y=None,\n        twist=None,\n        altitude_angle=None,\n        azimuth_angle=None,\n    ):\n        if not isinstance(element, WebElement):\n>           raise AttributeError(\"move_to requires a WebElement\")\nE           AttributeError: move_to requires a WebElement\n\n..\\..\\..\\..\\autotests\\venv\\Lib\\site-packages\\selenium\\webdriver\\common\\actions\\pointer_actions.py:88: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_review_all.Test101Review object at 0x00000244D4E003D0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c3c28aed4b2bbcaba6aace3ebd896aea\")>\n\n    @allure.title(\"\u041e\u0442\u0437\u044b\u0432 \u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0435\")\n    @qase.title(\"\u041e\u0442\u0437\u044b\u0432 \u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \u043e \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0435\")\n    @qase.id(345)\n    def test_review_provider(self, driver):\n        random_url = random.choice(urls_provider)\n        review = ReviewPageProvider(driver, random_url)\n        review.open()\n>       review.scroll_to_feedback_provider()\n\ntest_review_all.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py:80: in inner\n    with self._recreate_cm():\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <qaseio.pytest.ContextManager object at 0x00000244D4D67A90>\ntyp = <class 'AttributeError'>\nvalue = AttributeError('move_to requires a WebElement')\ntraceback = <traceback object at 0x00000244D4E01BC0>\n\n    def __exit__(self, typ, value, traceback):\n        if typ is None:\n            try:\n                next(self.gen)\n            except StopIteration:\n                return False\n            else:\n                try:\n                    raise RuntimeError(\"generator didn't stop\")\n                finally:\n                    self.gen.close()\n        else:\n            if value is None:\n                # Need to force instantiation so we can reliably\n                # tell if we get the same exception back\n                value = typ()\n            try:\n                self.gen.throw(typ, value, traceback)\n            except StopIteration as exc:\n                # Suppress StopIteration *unless* it's the same exception that\n                # was passed to throw().  This prevents a StopIteration\n                # raised inside the \"with\" statement from being suppressed.\n                return exc is not value\n            except RuntimeError as exc:\n                # Don't re-raise the passed in exception. (issue27122)\n                if exc is value:\n                    exc.__traceback__ = traceback\n                    return False\n                # Avoid suppressing if a StopIteration exception\n                # was passed to throw() and later wrapped into a RuntimeError\n                # (see PEP 479 for sync generators; async generators also\n                # have this behavior). But do this only if the exception wrapped\n                # by the RuntimeError is actually Stop(Async)Iteration (see\n                # issue29692).\n                if (\n                    isinstance(value, StopIteration)\n                    and exc.__cause__ is value\n                ):\n                    value.__traceback__ = traceback\n                    return False\n                raise\n            except BaseException as exc:\n                # only re-raise if it's *not* the exception that was\n                # passed to throw(), because __exit__() must not raise\n                # an exception unless __exit__() itself failed.  But throw()\n                # has to raise the exception to signal propagation, so this\n                # fixes the impedance mismatch between the throw() protocol\n                # and the __exit__() protocol.\n                if exc is not value:\n                    raise\n                exc.__traceback__ = traceback\n                return False\n            try:\n>               raise RuntimeError(\"generator didn't stop after throw()\")\nE               RuntimeError: generator didn't stop after throw()\n\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\contextlib.py:194: RuntimeError",
        "thread": "8500-MainThread"
    },
    "fields": {},
    "attachments": [],
    "steps": [
        {
            "id": "d180046a-f9a8-4493-994b-22b06b9dda26",
            "step_type": "text",
            "data": {
                "action": "\u0421\u043a\u0440\u043e\u043b\u043b \u0434\u043e \u043a\u043d\u043e\u043f\u043a\u0438 \u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430 \u0432 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0435 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u0438 \u043a\u043b\u0438\u043a \u043d\u0430 \u043d\u0435\u0435",
                "expected_result": null
            },
            "parent_id": null,
            "execution": {
                "start_time": 1732002046.9406316,
                "status": "untested",
                "end_time": 0,
                "duration": 0
            },
            "attachments": [],
            "steps": []
        }
    ],
    "params": {},
    "author": null,
    "relations": [],
    "muted": false,
    "message": "RuntimeError: generator didn't stop after throw()",
    "suite": null
}